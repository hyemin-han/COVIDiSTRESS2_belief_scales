table.age[i,1] <- mean(dat_mi[dat_mi$UserLanguage==langs.include[i],'age'],na.rm=T)
table.age[i,2] <- sd(dat_mi[dat_mi$UserLanguage==langs.include[i],'age'],na.rm=T)
}
rownames(table.age) <- langs.include
table.age
# education
table.education <- table(dat_mi$UserLanguage,dat_mi$education)
table.education
class(table.education)
matrix(table.education)
data.matrix(table.education)
# gender table
table.gender <- data.matrix(table(dat_mi$UserLanguage,dat_mi$gender))
# education
table.education <- data.matrix(table(dat_mi$UserLanguage,dat_mi$education))
# gender table
table.gender <- data.matrix(table(dat_mi$UserLanguage,dat_mi$gender))/
rowSums(data.matrix(table(dat_mi$UserLanguage,dat_mi$gender)))
table.gender
# gender table
table.gender <- data.matrix(table(dat_mi$UserLanguage,dat_mi$gender))/
rowSums(data.matrix(table(dat_mi$UserLanguage,dat_mi$gender)))*100
table.gender
# education
table.education <- data.matrix(table(dat_mi$UserLanguage,dat_mi$education))/
rowSums(data.matrix(table(dat_mi$UserLanguage,dat_mi$education)))*100
table.education
# education
table.education <- data.matrix(table(dat_mi$UserLanguage,dat_mi$education))/
rowSums(data.matrix(table(dat_mi$UserLanguage,dat_mi$education)))*100
colnames(table.education)<-c('None','Doctorate','Some univ.','Univ.',
'≥ 12yrs','≥ 6yrs','≥ 9yrs')
table.education
# merge
Table <- cbind(table.gender,table.age,table.education)
Table
colnames(table.age) <- c('age_M','age_SD')
# merge
Table <- cbind(table.gender,table.age,table.education)
Table
# save
write.csv(Table,'demographics.csv')
library(bayestestR)
test<-rnorm(20,30,1)
test1<-rnorm(20,31,2)
test2<-rnorm(20,40,5)
BF1<-bayesfactor_parameters(posterior=test1,prior=test)
install.packages('logspline')
BF1<-bayesfactor_parameters(posterior=test1,prior=test)
BF1
BF2<-bayesfactor_parameters(posterior=test2,prior=test)
BF2
library(effectsize)
interpret_bf(BF1)
interpret_bf(BF2)
interpret_bf(BF2,include_value = T)
test3<-rnorm(20,30,2)
BF3<-bayesfactor_parameters(posterior = test,prior=test3)
BF3
interpret_bf(BF3)
interpret_bf(BF3,include_value = T)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
interpret_bf(exp(BF2$log_BF[1]))
interpret_bf(exp(BF3$log_BF[1]))
plot(BF1)
install.packages('see')
plot(BF1)
library(bayestestR)
library(effectsize)
prior<-rnorm(20,30,1)
posterior1<-rnorm(20,30,2)
posterior2<-rnorm(20,30.5,2)
posterior3<-rnorm(20,35,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
interpret_bf(exp(BF1$log_BF[1]))
interpret_bf(exp(BF2$log_BF[1]))
interpret_bf(exp(BF3$log_BF[1]))
plot(BF1)
plot(BF2)
plot(BF3)plot(BF1)
BF1
BF2
BF3
posterior1
posterior2
posterior3
prior
library(bayestestR)
library(effectsize)
prior<-rnorm(20,30,1)
posterior1<-rnorm(20,30,1.5)
posterior2<-rnorm(20,30.5,2)
posterior3<-rnorm(20,35,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
interpret_bf(exp(BF1$log_BF[1]))
interpret_bf(exp(BF2$log_BF[1]))
interpret_bf(exp(BF3$log_BF[1]))
plot(BF1)
plot(BF2)
plot(BF3)
library(bayestestR)
library(effectsize)
prior<-rnorm(20,30,1)
posterior1<-rnorm(20,30,1.5)
posterior2<-rnorm(20,30.5,1.5)
posterior3<-rnorm(20,35,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
interpret_bf(exp(BF1$log_BF[1]))
interpret_bf(exp(BF2$log_BF[1]))
interpret_bf(exp(BF3$log_BF[1]))
plot(BF1)
plot(BF2)
plot(BF3)
exp(BF1$log_BF[1])
exp(BF2$log_BF[1])
exp(BF3$log_BF[1])
posterior1<-rnorm(20,30,1)
posterior2<-rnorm(20,30.5,1.5)
posterior3<-rnorm(20,35,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
prior<-rnorm(20,30,5)
posterior1<-rnorm(20,30,1)
posterior2<-rnorm(20,30.5,1.5)
posterior3<-rnorm(20,35,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
plot(BF1)
plot(BF2)
plot(BF3)
plot(BF3)
plot(BF2)
prior<-rnorm(20,0,1)
posterior1<-rnorm(20,1,1)
posterior2<-rnorm(20,2,1)
posterior3<-rnorm(20,3,1)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
plot(BF1)
plot(BF2)
plot(BF3)
prior<-rnorm(20,0,1)
posterior1<-rnorm(20,1,1)
posterior2<-rnorm(20,2,1)
posterior3<-rnorm(20,3,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
prior<-rnorm(20,0,1)
posterior1<-rnorm(20,.5,1)
posterior2<-rnorm(20,1,1)
posterior3<-rnorm(20,3,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
prior<-rnorm(20,0,1)
posterior1<-rnorm(20,.25,1)
posterior2<-rnorm(20,.5,1)
posterior3<-rnorm(20,3,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
prior<-rnorm(20,0,1)
posterior1<-rnorm(20,.25,1)
posterior2<-rnorm(20,2,1)
posterior3<-rnorm(20,3,2)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
posterior3<-rnorm(20,3,1)
BF1<-bayesfactor_parameters(posterior=posterior1,prior=prior)
BF2<-bayesfactor_parameters(posterior=posterior2,prior=prior)
BF3<-bayesfactor_parameters(posterior=posterior3,prior=prior)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
library(bayestestR)
library(effectsize)
prior<-rnorm(20,0,1)
posterior1<-rnorm(20,.25,1)
posterior2<-rnorm(20,2,1)
posterior3<-rnorm(20,3,1)
m_posterior <- stan_glm(
formula = posterior1 ~ 1,
data = posterior1,
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
library(rstanarm)
set.seed(12)
prior<-rnorm(20,0,1)
posterior1<-rnorm(20,.25,1)
posterior2<-rnorm(20,2,1)
posterior3<-rnorm(20,3,1)
m_posterior <- stan_glm(
formula = posterior1 ~ 1,
data = posterior1,
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
m_posterior <- stan_glm(
formula = posterior1 ~ 1,
data = as.data.frame(posterior1),
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
BF1<-bayesfactor_parameters(m_posterior)
BF1
plot(BF1)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
m_posterior2 <- stan_glm(
formula = posterior2 ~ 1,
data = as.data.frame(posterior1),
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
m_posterior3 <- stan_glm(
formula = posterior2 ~ 1,
data = as.data.frame(posterior1),
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
BF2<-bayesfactor_parameters(m_posterior2)
BF3<-bayesfactor_parameters(m_posterior3)
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
interpret_bf(exp(BF1$log_BF[1]))
exp(BF3$log_BF[1])
interpret_bf(exp(BF3$log_BF[1]))
posterior2<-rnorm(20,1,5)
m_posterior2 <- stan_glm(
formula = posterior2 ~ 1,
data = as.data.frame(posterior1),
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
BF2<-bayesfactor_parameters(m_posterior2)
BF2
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
plot(BF1)
plot(BF2)
plot(BF3)
plot(BF2)
plot(BF3)
plot(BF1)
plot(BF2)
plot(BF3)
BF2
BF3
BF1<-bayesfactor_parameters(m_posterior, null=0)
exp(BF1$log_BF[1])
interpret_bf(exp(BF1$log_BF[1]))
plot(BF1)
plot(BF3)
BF3<-bayesfactor_parameters(m_posterior3, null=0)
exp(BF3$log_BF[1])
plot(BF3)
BF2<-bayesfactor_parameters(m_posterior2,null=0)
plot(BF2)
exp(BF2$log_BF[1])
interpret_bf(exp(BF2$log_BF[1]))
plot(posterior3)
hist(posterior3)
posterior3
posterior1
posterior2
?rnorm
posterior3
rnorm(20,0,1)
rnorm(20,1,1)
rnorm(20,1,1)
rnorm(20,1,1)
posterior3
posterior3<-rnorm(20,1,1)
posterior3
m_posterior3 <- stan_glm(
formula = posterior3 ~ 1,
data = as.data.frame(posterior3),
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
m_posterior3
m_posterior <- stan_glm(
formula = posterior1 ~ 1,
data = as.data.frame(posterior1),
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
m_posterior2 <- stan_glm(
formula = posterior2 ~ 1,
data = as.data.frame(posterior2),
prior = normal(0,1, autoscale = FALSE),
chains = 10, iter = 5000, warmup = 1000
)
posterior1
posterior2
m_posterior2
m_posterior1
m_posterior
m_posterior2
m_posterior3
m_posterior3$prior.info
m_posterior3$prior.weights
BF3
BF1
BF3$Parameter
BF3$Component
BF3$log_BF
BF3$Effects
BF3
sleep
plot(BF1)
plot(BF2)
BF1$Parameter
m_posterior$coefficients
m_posterior$ses
m_posterior$fitted.values
m_posterior1$fitted.values
m_posterior2$fitted.values
m_posterior3$fitted.values
mean(posterior1)
mean(posterior2)
mean(posterior3)
posterior1<-rnorm(20,.25,1)
posterior2<-rnorm(20,1,5)
posterior3<-rnorm(20,1,1)
mean(posterior1)
mean(posterior2)
mean(posterior3)
plot(m_posterior3)
plot(m_posterior1)
plot(m_posterior)
plot(m_posterior2)
m_posterior$prior.info
m_posterior_2$prior.info
m_posterior2$prior.info
prior <- normal(0,1)
prior
prior <- normal(0,1,autoscale = F)
m_posterior <- stan_glm(
formula = posterior1 ~ 1,
data = as.data.frame(posterior1),
prior = prior,
chains = 10, iter = 5000, warmup = 1000
)
m_posterior$prior.info
m_posterior <- stan_glm(
formula = posterior1 ~ 0,
data = as.data.frame(posterior1),
prior = prior,
chains = 10, iter = 5000, warmup = 1000
)
m_posterior <- stan_glm(
formula = posterior1 ~ 1,
data = as.data.frame(posterior1),
prior = prior,
chains = 10, iter = 5000, warmup = 1000
)
as.data.frame(posterior1)
m_posterior <- stan_glm(
formula = posterior1 ~ posterior1,
data = as.data.frame(posterior1),
prior = prior,
chains = 10, iter = 5000, warmup = 1000
)
m_posterior$prior.info
m_posterior <- stan_glm(
formula = posterior1 ~ 1,
data = as.data.frame(posterior1),
prior = normal(0,1,autoscale = F),
prior_intercept = normal(0,1,autoscale = F),
chains = 10, iter = 5000, warmup = 1000
)
m_posterior$prior.info
BF1<-bayesfactor_parameters(m_posterior, null=0)
BF1
plot(BF1)
setwd("~/Documents/GitHub/COVIDiSTRESS2_belief_scales/0_descriptive")
knitr::opts_chunk$set(echo = TRUE)
# load libraries
if (!require("pacman")){
install.packages("pacman")
}
pacman::p_load(tidyverse,
rio,
psych,
car,
lavaan,
sirt,
here)
# set the current directory
here::i_am('README.md')
here::here()
#memory.limit(size=56000) #you might have to increase your memory limit
# load data
dat <- import(here("_cleandata/Final_COVIDiSTRESS_Vol2_cleaned.csv"))
# rename education levels
dat$education[dat$education == "University degree (e.g., MA, MSc, BA, BSc)"] <- "University degree"
dat$education[dat$education == "Some University or equivalent \r\n(still ongoing, or completed a module or more, but did not graduate)"] <- "Some University"
# language N ≥ 100 only
# at least one of two scales shall be completed
# variable names
var.anti <- c('antiexpert_1','antiexpert_2','antiexpert_3')
var.consp <- c('conspirational_think_1','conspirational_think_2',
'conspirational_think_3','conspirational_think_4')
dat$include.anti <- rowSums(is.na(dat[,c(var.anti)]))
dat$include.consp <- rowSums(is.na(dat[,var.consp]))
dat$include <- (dat$include.anti * dat$include.consp)==0
# drop missing cases
dat <- dat[dat$include,]
table(dat$UserLanguage)
# shall be >= 100
# extract 24 languages where N >= 100
n.langs <- table(dat$UserLanguage)
list.langs <- labels(n.langs)[[1]]
langs.include <- list.langs[n.langs>=100]
n.include <- n.langs[n.langs>=100]
# extract data
for (i in 1:length(langs.include)){
if (i == 1){
dat_mi <- dat[dat$UserLanguage == langs.include[i],]
}else{
current <- dat[dat$UserLanguage == langs.include[i],]
dat_mi <- rbind(dat_mi,current)
}
}
# included languages
table(dat_mi$UserLanguage)
length(table(dat_mi$UserLanguage))
# gender table
table.gender <- data.matrix(table(dat_mi$UserLanguage,dat_mi$gender))/
rowSums(data.matrix(table(dat_mi$UserLanguage,dat_mi$gender)))
# age table (M, SD)
table.age <- matrix(nrow=length(langs.include),ncol = 2)
for (i in 1: length(langs.include)){
table.age[i,1] <- mean(dat_mi[dat_mi$UserLanguage==langs.include[i],'age'],na.rm=T)
table.age[i,2] <- sd(dat_mi[dat_mi$UserLanguage==langs.include[i],'age'],na.rm=T)
}
rownames(table.age) <- langs.include
colnames(table.age) <- c('age_M','age_SD')
# education
table.education <- data.matrix(table(dat_mi$UserLanguage,dat_mi$education))/
rowSums(data.matrix(table(dat_mi$UserLanguage,dat_mi$education)))
colnames(table.education)<-c('None','Doctorate','Some univ.','Univ.',
'≥ 12yrs','≥ 6yrs','≥ 9yrs')
# merge
Table <- cbind(table.gender,table.age,table.education)
# save
write.csv(Table,'demographics.csv')
table(dat$education)
test<-table(dat_mi$UserLanguage)
View(test)
table(dat.mi$gender)
table(dat_mi$gender)
table(dat_mi$gender)/sum(table(dat_mi$gender))
summary(dat_mi$age)
sd(dat_mi$age)
sd(dat_mi$age,na.rm=T)
table(dat_mi$education)/sum(table(dat_mi$education))
